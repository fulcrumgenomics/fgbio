name: release

on:
  push:
    tags: '[0-9]+.[0-9]+.[0-9]+'

jobs:
  on-main-branch-check:
    runs-on: ubuntu-latest
    outputs:
      on_main: ${{ steps.contains_tag.outputs.retval }}
    steps:
      # TODO: remove this and the `git branch -a` when the following PR
      # is merged and released:
      #   https://github.com/rickstaa/action-contains-tag/pull/18
      - name: git config --global remote.origin.followRemoteHEAD never
        shell: bash
        run: git config --global remote.origin.followRemoteHEAD never

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: debug git branch -a
        shell: bash
        run: git branch -a

      - uses: rickstaa/action-contains-tag@a9ff27d505ba2bf074a2ebb48b208e76d35ff308 # v1.2.10
        id: contains_tag
        with:
          reference: "main"
          tag: "${{ github.ref_name }}"

  tests:
    name: tests
    needs: on-main-branch-check
    uses: "./.github/workflows/unittests.yaml"
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    name: Release, update tool and metric markdown docs
    needs: tests
    runs-on: ubuntu-latest
    environment: github-actions
    env:
      SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
      SONATYPE_PASS: ${{ secrets.SONATYPE_PASS }}
      PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
      PGP_SECRET: ${{ secrets.PGP_SECRET }}
    steps:
      - name: Check for secrets.SONATYPE_USER
        if: ${{ env.SONATYPE_USER == '' }}
        run: |
          echo '"SONATYPE_USER" secret not set'
          echo 'please go to "settings > secrets > actions" to create it'
      - name: Check for secrets.SONATYPE_PASS
        if: ${{ env.SONATYPE_PASS == '' }}
        run: |
          echo '"SONATYPE_PASS" secret not set'
          echo 'please go to "settings > secrets > actions" to create it'
      - name: Check for secrets.PGP_PASSPHRASE
        if: ${{ env.PGP_PASSPHRASE== '' }}
        run: |
          echo '"PGP_PASSPHRASE" secret not set'
          echo 'please go to "settings > secrets > actions" to create it'
      - name: Check for secrets.PGP_SECRET
        if: ${{ env.PGP_SECRET== '' }}
        run: |
          echo '"PGP_SECRET" secret not set'
          echo 'please go to "settings > secrets > actions" to create it'
      - name: Export tty
        run: |
          echo "GPG_TTY=$(tty)" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          # To work with the `pull_request` or any other non-`push` even with git-auto-commit
          ref: ${{ github.head_ref }}
      - name: Setup GPG
        shell: bash -l {0}
        run: |
          echo "$PGP_SECRET" | base64 --decode | gpg --import --batch --yes
      - name: Generate the docs
        id: docs
        uses: ./.github/actions/docs/
        with:
          build-dir: ./build
          latest: true
      - name: Copy assembly JAR into place
        shell: bash -l {0}
        run: |
          cp -v target/scala-2.13/fgbio-*.jar fgbio-"${FGBIO_VERSION}".jar
      - name: Build and sign artifacts
        shell: bash -l {0}
        run: |
          sbt +publishSigned
      - name: Release to Sonatype
        shell: bash -l {0}
        run: |
          sbt sonaRelease
      - name: Commit generated docs
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        with:
          max_attempts: 5
          retry_on: error
          polling_interval_seconds: 5
          timeout_minutes: 5
          command: |
            set -euo pipefail
            pushd ./build
            git add tools metrics index.md
            git config --global user.name "Github Actions"
            git config --global user.email "nobody@fulcrumgenomics.com"
            git commit --all --message "release: ${FGBIO_VERSION}" --author "Nobody <nobody@fulcrumgenomics.com>" || echo "nothing to commit"
            git fetch origin gh-pages
            git rebase -X ours origin/gh-pages
            git push --atomic --set-upstream origin gh-pages
            popd
          new_command_on_retry: |
            set -euo pipefail
            pushd ./build
            git fetch origin gh-pages
            git rebase --abort
            git rebase -X ours origin/gh-pages
            git push --atomic --set-upstream origin gh-pages
            popd
      - name: Upload fgbio.jar
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: fgbio-jar
          path: fgbio-${{ env.FGBIO_VERSION }}.jar

  make-changelog:
    runs-on: ubuntu-latest
    needs: release
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout the Repository at the Tagged Commit
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - name: Generate a Changelog
        uses: orhun/git-cliff-action@4a4a951bc43fafe41cd2348d181853f52356bee7 # v4.4.2
        id: git-cliff
        with:
          config: pyproject.toml
          args: --latest --verbose
        env:
          GITHUB_REPO: ${{ github.repository }}

  make-github-release:
    runs-on: ubuntu-latest
    environment: github-actions
    permissions:
      contents: write
      pull-requests: read
    needs: make-changelog
    steps:
      - name: Download fgbio.jar artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: fgbio-jar
      - name: Display structure of downloaded files
        shell: bash
        run: ls -R
      - name: Create a Release
        id: create_release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          name: ${{ github.ref_name }}
          body: ${{ needs.make-changelog.outputs.release_body }}
          draft: false
          prerelease: false
          files: fgbio-*jar

